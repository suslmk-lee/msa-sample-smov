apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: theater-msa
  labels:
    app: api-gateway
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        tier: frontend
    spec:
      serviceAccountName: theater-msa-sa
      containers:
      - name: api-gateway
        image: harbor.27.96.156.180.nip.io/theater-msa/api-gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CLUSTER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['cluster-name']
        envFrom:
        - configMapRef:
            name: theater-config
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: ui-files
          mountPath: /app/ui
          readOnly: true
      volumes:
      - name: ui-files
        configMap:
          name: ui-files
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: cluster-name
                operator: In
                values:
                - ctx1
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: theater-msa
  labels:
    app: api-gateway
    tier: frontend
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: api-gateway
