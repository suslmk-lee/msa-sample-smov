apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-monitor
  namespace: theater-msa
  labels:
    app: cluster-monitor
    cluster: ctx2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-monitor
  template:
    metadata:
      labels:
        app: cluster-monitor
        cluster: ctx2
    spec:
      serviceAccountName: cluster-monitor-sa
      containers:
      - name: monitor
        image: alpine/curl:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          while true; do
            # CTX2 클러스터 정보를 CTX1 API Gateway로 주기적 전송
            kubectl get pods -n theater-msa -o json > /tmp/ctx2-status.json
            curl -X POST http://api-gateway.theater-msa.svc.cluster.local:8080/ctx2-status \
              -H "Content-Type: application/json" \
              -d @/tmp/ctx2-status.json || true
            sleep 30
          done
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-monitor-sa
  namespace: theater-msa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-monitor-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-monitor-binding
subjects:
- kind: ServiceAccount
  name: cluster-monitor-sa
  namespace: theater-msa
roleRef:
  kind: ClusterRole
  name: cluster-monitor-role
  apiGroup: rbac.authorization.k8s.io